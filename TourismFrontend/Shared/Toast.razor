@inject IJSRuntime JSRuntime
@inject TourismFrontend.Services.ToastService ToastService
@implements IDisposable

<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
    @foreach (var toast in toasts)
    {
        <div class="toast show @GetToastClass(toast.Type)" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <span class="me-auto">@toast.Title</span>
                <button type="button" class="btn-close" @onclick="() => RemoveToast(toast.Id)"></button>
            </div>
            <div class="toast-body">
                @toast.Message
            </div>
        </div>
    }
</div>

@code {
    private List<ToastMessage> toasts = new();
    private int nextId = 1;

    protected override void OnInitialized()
    {
        ToastService.OnShow += ShowToast;
    }

    public void Dispose()
    {
        ToastService.OnShow -= ShowToast;
    }

    private void ShowToast(string message, string title, ToastType type)
    {
        var toast = new ToastMessage
        {
            Id = nextId++,
            Message = message,
            Title = title,
            Type = type,
            Timestamp = DateTime.Now
        };

        toasts.Add(toast);
        StateHasChanged();

        // Автоматически удаляем уведомление через 5 секунд
        _ = Task.Delay(5000).ContinueWith(_ =>
        {
            RemoveToast(toast.Id);
        });
    }

    private void RemoveToast(int id)
    {
        var toast = toasts.FirstOrDefault(t => t.Id == id);
        if (toast != null)
        {
            toasts.Remove(toast);
            StateHasChanged();
        }
    }

    private string GetToastClass(ToastType type) => type switch
    {
        ToastType.Success => "bg-success text-white",
        ToastType.Error => "bg-danger text-white",
        ToastType.Warning => "bg-warning",
        ToastType.Info => "bg-info",
        _ => "bg-light"
    };

    private class ToastMessage
    {
        public int Id { get; set; }
        public string Message { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public ToastType Type { get; set; }
        public DateTime Timestamp { get; set; }
    }
} 